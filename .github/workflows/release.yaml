# Uses a slightly modified version of the ci from bitbrain/godot-gamejam

name: Release

on:
  # Trigger this workflow when a tag is pushed in the format `v1.2.3`.
  push:
    tags:
      # Pattern syntax: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
      - "v[0-9]+.[0-9]+.[0-9]+*"

  # Trigger this workflow manually via workflow dispatch.
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number in the format `v1.2.3`'
        required: true
        type: string

env:
  GODOT_VERSION: "4.4.1"
  GODOT_STATUS: "stable"

jobs:
  import-assets:
    runs-on: ubuntu-latest
    container: barichello/godot-ci:4.4.1
    steps:
      - uses: actions/checkout@v4
      - name: Cache import assets
        uses: actions/cache@v3
        with:
          path: .godot/imported/
          key: import-assets-${{ runner.os }}-${{ github.sha }}
      - name: Import assets
        run: godot --headless --verbose --editor --quit

  export-game:
    runs-on: ubuntu-latest
    needs: import-assets
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: .godot/imported/
          key: import-assets-${{ runner.os }}-${{ github.sha }}
      - name: Export Game using Godot
        id: export
        uses: firebelley/godot-export@v5.2.1
        with:
          godot_executable_download_url: "https://github.com/godotengine/godot/releases/download/${{ env.GODOT_VERSION }}-${{ env.GODOT_STATUS }}/Godot_v${{ env.GODOT_VERSION }}-${{ env.GODOT_STATUS }}_linux.x86_64.zip"
          godot_export_templates_download_url: "https://github.com/godotengine/godot/releases/download/${{ env.GODOT_VERSION }}-${{ env.GODOT_STATUS }}/Godot_v${{ env.GODOT_VERSION }}-${{ env.GODOT_STATUS }}_export_templates.tpz"
          relative_project_path: "./project"
          archive_output: true
          cache: false
      - name: Upload HTML5
        if: ${{hashFiles(format('{0}/HTML5.zip', steps.export.outputs.archive_directory)) != ''}}
        uses: actions/upload-artifact@v4
        with:
          name: HTML5
          path: /home/runner/.local/share/godot/archives/HTML5.zip
      # - name: Upload Linux
      #   if: ${{vars.DEPLOY_LINUX != 'false'}}
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: LinuxX11
      #     path: /home/runner/.local/share/godot/archives/LinuxX11.zip
      # - name: Upload Windows
      #   if: ${{vars.DEPLOY_WINDOWS != 'false'}}
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: Windows
      #     path: /home/runner/.local/share/godot/archives/Windows.zip
      # - name: Upload MacOS
      #   if: ${{vars.DEPLOY_MACOS != 'false'}}
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: macOS
      #     path: /home/runner/.local/share/godot/archives/macOS.zip

  # deploy-to-itchio-linux:
  #   if: ${{vars.DEPLOY_LINUX != 'false'}}
  #   runs-on: ubuntu-latest
  #   needs: export-game
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: LinuxX11
  #     - name: Deploy to Itch.io (Linux)
  #       uses: manleydev/butler-publish-itchio-action@master
  #       env:
  #         BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
  #         CHANNEL: linux
  #         ITCH_GAME: ${{ secrets.ITCHIO_GAME }}
  #         ITCH_USER: ${{ secrets.ITCHIO_USERNAME }}
  #         PACKAGE: LinuxX11.zip

  # deploy-to-itchio-windows:
  #   if: ${{vars.DEPLOY_WINDOWS != 'false'}}
  #   runs-on: ubuntu-latest
  #   needs: export-game
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: Windows
  #     - name: Deploy to Itch.io (Windows)
  #       uses: manleydev/butler-publish-itchio-action@master
  #       env:
  #         BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
  #         CHANNEL: windows
  #         ITCH_GAME: ${{ secrets.ITCHIO_GAME }}
  #         ITCH_USER: ${{ secrets.ITCHIO_USERNAME }}
  #         PACKAGE: Windows.zip

  # deploy-to-itchio-mac:
  #   if: ${{vars.DEPLOY_MACOS != 'false'}}
  #   runs-on: ubuntu-latest
  #   needs: export-game
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: macOS
  #     - name: Deploy to Itch.io (MacOS)
  #       uses: manleydev/butler-publish-itchio-action@master
  #       env:
  #         BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
  #         CHANNEL: mac
  #         ITCH_GAME: ${{ secrets.ITCHIO_GAME }}
  #         ITCH_USER: ${{ secrets.ITCHIO_USERNAME }}
  #         PACKAGE: macOS.zip

  # deploy-to-itchio-web:
  #   if: ${{vars.DEPLOY_HTML5 != 'false'}}
  #   runs-on: ubuntu-latest
  #   needs: export-game
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: HTML5
  #     - name: Deploy to Itch.io (HTML5)
  #       uses: manleydev/butler-publish-itchio-action@master
  #       env:
  #         BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
  #         CHANNEL: web
  #         ITCH_GAME: ${{ secrets.ITCHIO_GAME }}
  #         ITCH_USER: ${{ secrets.ITCHIO_USERNAME }}
  #         PACKAGE: HTML5.zip
